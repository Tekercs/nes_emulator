#include "TestCpuHelpers.h"

#include <sstream>
#include <iomanip>

using namespace std;
using namespace Emulator::Memory;
using namespace Emulator::Cpu;

std::string parseCurrentStateLog(Emulator::Memory::Memory& memory, const Emulator::Cpu::Registers& registers)
{
    stringstream sstream;
    sstream << uppercase << "0x" << setfill('0') << setw(4) << hex << (int)registers.getProgramCounter() << " ";
    
    switch (memory.getFrom(registers.getProgramCounter()))
    {
        case 0x69: sstream << "0x69 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break; 
        case 0x65: sstream << "0x65 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x75: sstream << "0x75 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x6D: sstream << "0x6D " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x7D: sstream << "0x7D " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x79: sstream << "0x79 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x61: sstream << "0x61 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x71: sstream << "0x71 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x29: sstream << "0x29 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x25: sstream << "0x25 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x35: sstream << "0x35 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x2D: sstream << "0x2D " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x3D: sstream << "0x3D " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x39: sstream << "0x39 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x21: sstream << "0x21 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x31: sstream << "0x31 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x0A: sstream << "0x0A"; break; 
        case 0x06: sstream << "0x06 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x16: sstream << "0x16 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x0E: sstream << "0x0E " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x1E: sstream << "0x1E " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x90: sstream << "0x90 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xB0: sstream << "0xB0 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xF0: sstream << "0xF0 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x24: sstream << "0x24 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x2C: sstream << "0x2C " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x30: sstream << "0x30 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xD0: sstream << "0xD0 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x10: sstream << "0x10 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x50: sstream << "0x50 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x70: sstream << "0x70 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xC6: sstream << "0xC6 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xD6: sstream << "0xD6 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xCE: sstream << "0xCE " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xDE: sstream << "0xDE " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xCA: sstream << "0xCA"; break; 
        case 0x88: sstream << "0x88"; break; 
        case 0xE6: sstream << "0xE6 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xF6: sstream << "0xF6 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xEE: sstream << "0xEE " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xFE: sstream << "0xFE " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xE8: sstream << "0xE8"; break; 
        case 0xC8: sstream << "0xC8"; break; 
        case 0xA9: sstream << "0xA9 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xA5: sstream << "0xA5 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xB5: sstream << "0xB5 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xAD: sstream << "0xAD " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xBD: sstream << "0xBD " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xB9: sstream << "0xB9 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xA1: sstream << "0xA1 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xB1: sstream << "0xB1 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xA2: sstream << "0xA2 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xA6: sstream << "0xA6 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xB6: sstream << "0xB6 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xAE: sstream << "0xAE " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xBE: sstream << "0xBE " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xA0: sstream << "0xA0 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xA4: sstream << "0xA4 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xB4: sstream << "0xB4 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xAC: sstream << "0xAC " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xBC: sstream << "0xBC " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x48: sstream << "0x48"; break; 
        case 0x68: sstream << "0x68"; break; 
        case 0x08: sstream << "0x08"; break; 
        case 0x28: sstream << "0x28"; break; 
        case 0x38: sstream << "0x38"; break; 
        case 0xF8: sstream << "0xF8"; break; 
        case 0x78: sstream << "0x78"; break; 
        case 0x18: sstream << "0x18"; break; 
        case 0xD8: sstream << "0xD8"; break; 
        case 0x58: sstream << "0x58"; break; 
        case 0xB8: sstream << "0xB8"; break; 
        case 0xAA: sstream << "0xAA"; break; 
        case 0xA8: sstream << "0xA8"; break; 
        case 0xBA: sstream << "0xBA"; break; 
        case 0x8A: sstream << "0x8A"; break; 
        case 0x9A: sstream << "0x9A"; break; 
        case 0x98: sstream << "0x98"; break; 
        case 0x4C: sstream << "0x4C " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x6C: sstream << "0x6C " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xE9: sstream << "0xE9 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xE5: sstream << "0xE5 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xF5: sstream << "0xF5 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xED: sstream << "0xED " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xFD: sstream << "0xFD " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xF9: sstream << "0xF9 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xE1: sstream << "0xE1 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xF1: sstream << "0xF1 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x85: sstream << "0x85 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x95: sstream << "0x95 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x8D: sstream << "0x8D " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x9D: sstream << "0x9D " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x99: sstream << "0x99 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x81: sstream << "0x81 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x91: sstream << "0x91 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x86: sstream << "0x86 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x96: sstream << "0x96 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x8E: sstream << "0x8E " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x84: sstream << "0x84 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x94: sstream << "0x94 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x8C: sstream << "0x8C " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xEA: sstream << "0xEA"; break; 
        case 0x2A: sstream << "0x2A"; break; 
        case 0x26: sstream << "0x26 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x36: sstream << "0x36 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x2E: sstream << "0x2E " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x3E: sstream << "0x3E " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x6A: sstream << "0x6A"; break; 
        case 0x66: sstream << "0x66 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x76: sstream << "0x76 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x6E: sstream << "0x6E " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x7E: sstream << "0x7E " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x4A: sstream << "0x4A"; break; 
        case 0x46: sstream << "0x46 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x56: sstream << "0x56 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x4E: sstream << "0x4E " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x5E: sstream << "0x5E " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xC9: sstream << "0xC9 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xC5: sstream << "0xC5 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xD5: sstream << "0xD5 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xCD: sstream << "0xCD " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xDD: sstream << "0xDD " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xD9: sstream << "0xD9 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xC1: sstream << "0xC1 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xD1: sstream << "0xD1 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xE0: sstream << "0xE0 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xE4: sstream << "0xE4 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xEC: sstream << "0xEC " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0xC0: sstream << "0xC0 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xC4: sstream << "0xC4 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0xCC: sstream << "0xCC " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x49: sstream << "0x49 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x45: sstream << "0x45 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x55: sstream << "0x55 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x4D: sstream << "0x4D " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x5D: sstream << "0x5D " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x59: sstream << "0x59 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x41: sstream << "0x41 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x51: sstream << "0x51 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x09: sstream << "0x09 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x05: sstream << "0x05 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x15: sstream << "0x15 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x0D: sstream << "0x0D " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x1D: sstream << "0x1D " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x19: sstream << "0x19 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x01: sstream << "0x01 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x11: sstream << "0x11 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1); break;
        case 0x20: sstream << "0x20 " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +1) << " " << "0x" << setfill('0') << setw(2) << hex << (int)memory.getFrom(registers.getProgramCounter() +2); break;
        case 0x60: sstream << "0x60"; break; 
        case 0x40: sstream << "0x40"; break; 
        case 0x00: sstream << "0x00"; break; 
    }

    sstream << " A:" << "0x" << setfill('0') << setw(2) << hex << (int)registers.getAccumulator();
    sstream << " X:" << "0x" << setfill('0') << setw(2) << hex << (int)registers.getIndexRegisterX();
    sstream << " Y:" << "0x" << setfill('0') << setw(2) << hex << (int)registers.getIndexRegisterY();
    sstream << " P:" << "0x" << setfill('0') << setw(2) << hex << (int)registers.getStatusFlags();
    sstream << " SP:" << "0x" << setfill('0') << setw(2) << hex << (int)registers.getStackPointerOffset();
    sstream << "\r";

    return sstream.str();
}
